/*******************************************************************************************
  SIMPL+ Module Information
*******************************************************************************************/

/*
Dealer Name:	AV Kommunikationstechnik
System Name:
System Number:
Programmer:     B. Piffko
Comments:	
*/

/*******************************************************************************************
  Compiler Directives
*******************************************************************************************/  

// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
#DEFINE_CONSTANT LagutePort 5000
#DEFINE_CONSTANT LD382APort 5577

// #CATEGORY "" 
#PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM


#HELP_BEGIN

Quick and Dirty Module for different WifiRGB Light Controller

#HELP_END


/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
*******************************************************************************************/

 DIGITAL_INPUT _SKIP_,_SKIP_,Ein,Aus;
 ANALOG_INPUT Red,Green,Blue; 
 
// STRING_INPUT 
// BUFFER_INPUT 

 DIGITAL_OUTPUT Ein_FB,Aus_FB;
// ANALOG_OUTPUT 
// STRING_OUTPUT 

/*******************************************************************************************
  SOCKETS
*******************************************************************************************/
 TCP_CLIENT TCPClient[256];
// TCP_SERVER
 UDP_SOCKET UDPClient[256];

/*******************************************************************************************
  Parameters
*******************************************************************************************/ 

 INTEGER_PARAMETER Controller;
 String_Parameter  IP[15];
/*******************************************************************************************
  Parameter Properties
*******************************************************************************************/


//#BEGIN_PARAMETER_PROPERTIES Controller
//      propList = {1d,"Lagute" },{2d,"LD382A"};
//#END_PARAMETER_PROPERTIES

/*******************************************************************************************
  Konstanten
*******************************************************************************************/
  
/*******************************************************************************************
  Global Variables
*******************************************************************************************/
	

/*******************************************************************************************
  Functions
*******************************************************************************************/ 
Function ConnectLagute(){
	while(SocketUDP_Enable(UDPclient,IP,LagutePort) != 0){
		Trace("Connection Failed! Retrying...");		
		delay(100);
	}
}

Function ConnectLD382A(){
	while(SocketConnectClient(TCPclient,IP,LD382APort,1) != 0){
		Trace("Connection Failed! Retrying...");		
		delay(100);	
	}
}


Function Send(String Tx$){
	//Trace("MDPSend: %s",Message);
	if(Controller =1){ 	// Communication over UDP
    	Socketsend(UDPclient,Tx$);
	}
	else{				//Communication over TCP
		Socketsend(TCPclient,Tx$);
	}
}

Function LD382CheckSum(String Message$){
    Integer i,CheckSum;
	String  ReturnMessage$[20];
	
	CheckSum = 0;
	for(i = 1 to len(Message$)){
    	CheckSum = CheckSum + Byte(Message$,i);
	}
	CheckSum = CheckSum Mod 256;		
	
	makestring(ReturnMessage$,"%s%s",Message$,Chr(CheckSum));	
	Send(ReturnMessage$);	
}

Function chColour()
{
	String Message$[255];
	Integer R,G,B;
	
	R = Red;
	G = Green;
	B = Blue;

	Switch(Controller){
    	case(1):{ // Lagute
			Makestring(Message$,"\x7E\x07\x05\x03%s%s%s\x00\xEF",Chr(R),Chr(G),Chr(B));
			send(Message$);
		}
		case(2):{ // LD382A
      		Makestring(Message$,"\x31%s%s%s\x00\x00\x0F",Chr(R),Chr(G),Chr(B)); 
			LD382CheckSum(Message$);	 	
 		}
	}
} 


/*******************************************************************************************
	Ein / Aus
*******************************************************************************************/


PUSH Ein
{
	String Message$[255];

	Switch(Controller){
    	case(1):{ // Lagute
        	Makestring(Message$,"\x7E\x04\x04\x01\xFF\xFF\xFF\x00\xEF");
		}
		case(2):{ // LD382A
        	Makestring(Message$,"\x71\x23\x0F\xA3");
		}
	}
	Send(Message$);
	Ein_FB = 1;
	Aus_FB = 0;
}

PUSH Aus
{
	String Message$[255];

	Switch(Controller){
    	case(1):{ // Lagute
			Makestring(Message$,"\x7E\x04\x04\x00\xFF\xFF\xFF\x00\xEF");		
		}
		case(2):{ // LD382A
        	Makestring(Message$,"\x71\x24\x0F\xA4");
		}
	} 
	Send(Message$);
	Ein_FB = 0;
	Aus_FB = 1;  
}


/*******************************************************************************************
	RGB
*******************************************************************************************/



CHANGE Red
{
    chColour();
	Ein_FB = 1;
	Aus_FB = 0;

}
CHANGE Green
{
    chColour();
 	Ein_FB = 1;
	Aus_FB = 0;
}
CHANGE Blue
{
    chColour();
	Ein_FB = 1;
	Aus_FB = 0;
}


/*******************************************************************************************
  Main()
*******************************************************************************************/


Function Main()
{
	Switch(Controller){
    	case(1):{ // Lagute
			ConnectLagute();			
		}
		case(2):{ // LD382A
			ConnectLD382A();
		}	
	} 
}


